name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    name: build (Elixir ${{ matrix.elixir }} | OTP ${{ matrix.otp }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        elixir: [ '1.14', '1.15', '1.16', '1.17', '1.18' ]
        otp: [ '25', '26', '27' ]
    steps:
      - uses: actions/checkout@v4
      - uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}
      - name: Restore deps cache
        uses: actions/cache@v4
        with:
          path: deps
          key: deps-${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-${{ hashFiles('**/mix.lock') }}
      - name: Restore _build cache
        uses: actions/cache@v4
        with:
          path: _build
          key: build-${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-${{ hashFiles('**/mix.lock') }}
      - run: mix local.hex --force
      - run: mix local.rebar --force
      - run: mix deps.get
      - run: mix format --check-formatted
      - run: mix compile --warnings-as-errors
      - run: mix test
        env:
          ELIXIR_ASSERT_TIMEOUT: '2000'

  dialyzer:
    name: dialyzer (latest)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.18'
          otp-version: '27'
      - name: Restore deps cache
        uses: actions/cache@v4
        with:
          path: deps
          key: deps-${{ runner.os }}-latest-${{ hashFiles('**/mix.lock') }}
      - name: Restore _build cache
        uses: actions/cache@v4
        with:
          path: _build
          key: build-${{ runner.os }}-latest-${{ hashFiles('**/mix.lock') }}
      - run: mix local.hex --force
      - run: mix local.rebar --force
      - run: mix deps.get
      - run: mix compile
      - run: mix dialyzer

